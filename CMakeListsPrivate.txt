# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "esp12e;node32s;" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

# Convert "Home Directory" that may contain unescaped backslashes on Windows
file(TO_CMAKE_PATH $ENV{HOMEDRIVE}$ENV{HOMEPATH} ENV_HOME_PATH)


SET(CMAKE_C_COMPILER "${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-gcc.exe")
SET(CMAKE_CXX_COMPILER "${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-g++.exe")
SET(CMAKE_CXX_FLAGS "-fno-rtti -fno-exceptions -std=gnu++11 -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")
SET(CMAKE_C_FLAGS "-std=gnu99 -Wno-old-style-declaration -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")

SET(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "node32s")
    add_definitions(-DPLATFORMIO=50205)
    add_definitions(-DARDUINO_Node32s)
    add_definitions(-DFACTORY_WIFI_SSID=\"\")
    add_definitions(-DFACTORY_WIFI_PASSWORD=\"\")
    add_definitions(-DFACTORY_WIFI_HOSTNAME=\"\#{platform}-\#{unique_id}\")
    add_definitions(-DFACTORY_AP_PROVISION_MODE=AP_MODE_DISCONNECTED)
    add_definitions(-DFACTORY_AP_SSID=\"WC-\#{unique_id}\")
    add_definitions(-DFACTORY_AP_PASSWORD=\"123456789\")
    add_definitions(-DFACTORY_AP_CHANNEL=1)
    add_definitions(-DFACTORY_AP_SSID_HIDDEN=false)
    add_definitions(-DFACTORY_AP_MAX_CLIENTS=4)
    add_definitions(-DFACTORY_AP_LOCAL_IP=\"192.168.1.111\")
    add_definitions(-DFACTORY_AP_GATEWAY_IP=\"192.168.1.111\")
    add_definitions(-DFACTORY_AP_SUBNET_MASK=\"255.255.255.0\")
    add_definitions(-DFACTORY_ADMIN_USERNAME=\"admin\")
    add_definitions(-DFACTORY_ADMIN_PASSWORD=\"admin\")
    add_definitions(-DFACTORY_GUEST_USERNAME=\"guest\")
    add_definitions(-DFACTORY_GUEST_PASSWORD=\"guest\")
    add_definitions(-DFACTORY_NTP_ENABLED=true)
    add_definitions(-DFACTORY_NTP_TIME_ZONE_LABEL=\"Europe/London\")
    add_definitions(-DFACTORY_NTP_TIME_ZONE_FORMAT=\"GMT0BST,M3.5.0/1,M10.5.0\")
    add_definitions(-DFACTORY_NTP_SERVER=\"time.google.com\")
    add_definitions(-DFACTORY_OTA_PORT=8266)
    add_definitions(-DFACTORY_OTA_PASSWORD=\"esp-react\")
    add_definitions(-DFACTORY_OTA_ENABLED=true)
    add_definitions(-DFACTORY_MQTT_ENABLED=false)
    add_definitions(-DFACTORY_MQTT_HOST=\"test.mosquitto.org\")
    add_definitions(-DFACTORY_MQTT_PORT=1883)
    add_definitions(-DFACTORY_MQTT_USERNAME=\"\")
    add_definitions(-DFACTORY_MQTT_PASSWORD=\"\")
    add_definitions(-DFACTORY_MQTT_CLIENT_ID=\"\#{platform}-\#{unique_id}\")
    add_definitions(-DFACTORY_MQTT_KEEP_ALIVE=60)
    add_definitions(-DFACTORY_MQTT_CLEAN_SESSION=true)
    add_definitions(-DFACTORY_MQTT_MAX_TOPIC_LENGTH=128)
    add_definitions(-DFACTORY_JWT_SECRET=\"\#{random}-\#{random}\")
    add_definitions(-DFT_PROJECT=1)
    add_definitions(-DFT_SECURITY=1)
    add_definitions(-DFT_MQTT=1)
    add_definitions(-DFT_NTP=1)
    add_definitions(-DFT_OTA=1)
    add_definitions(-DFT_UPLOAD_FIRMWARE=1)
    add_definitions(-DNO_GLOBAL_ARDUINOOTA)
    add_definitions(-DPROGMEM_WWW)
    add_definitions(-DESP32)
    add_definitions(-DESP_PLATFORM)
    add_definitions(-DF_CPU=240000000L)
    add_definitions(-DHAVE_CONFIG_H)
    add_definitions(-DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\")
    add_definitions(-DARDUINO=10805)
    add_definitions(-DARDUINO_ARCH_ESP32)
    add_definitions(-DARDUINO_VARIANT=\"esp32\")
    add_definitions(-DARDUINO_BOARD=\"Node32s\")

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/framework")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/ArduinoOTA/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/ESPmDNS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/Update/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SPIFFS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/DNSServer/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/node32s/AsyncMqttClient/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/node32s/ESP Async WebServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/WiFi/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/FS/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/node32s/AsyncTCP/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/node32s/ArduinoJson/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/config")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_trace")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_update")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/asio")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bootloader_support")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bt")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/coap")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/console")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/driver")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/efuse")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-tls")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_adc_cal")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_event")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_client")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_server")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_ota")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_server")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_ringbuf")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_websocket_client")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/espcoredump")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ethernet")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/expat")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fatfs")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freemodbus")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freertos")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/heap")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/idf_test")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/jsmn")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/json")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/libsodium")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/log")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/lwip")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mbedtls")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mdns")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/micro-ecc")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mqtt")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/newlib")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nghttp")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nvs_flash")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/openssl")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protobuf-c")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protocomm")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/pthread")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/sdmmc")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/smartconfig_ack")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/soc")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spi_flash")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spiffs")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcp_transport")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcpip_adapter")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ulp")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/unity")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/vfs")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wear_levelling")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wifi_provisioning")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wpa_supplicant")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/xtensa-debug-module")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-face")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32-camera")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fb_gfx")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/cores/esp32")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/variants/esp32")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/AsyncUDP/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/AzureIoT/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/BLE/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/BluetoothSerial/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/EEPROM/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/ESP32/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/FFat/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPClient/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdate/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdateServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/NetBIOS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/Preferences/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SD/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SD_MMC/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SPI/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SimpleBLE/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/Ticker/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/WebServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiClientSecure/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiProv/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/Wire/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/node32s/*.*
    )
endif()

if (CMAKE_BUILD_TYPE MATCHES "esp12e")
    add_definitions(-DPLATFORMIO=50205)
    add_definitions(-DESP8266)
    add_definitions(-DARDUINO_ARCH_ESP8266)
    add_definitions(-DARDUINO_ESP8266_ESP12)
    add_definitions(-DFACTORY_WIFI_SSID=\"\")
    add_definitions(-DFACTORY_WIFI_PASSWORD=\"\")
    add_definitions(-DFACTORY_WIFI_HOSTNAME=\"\#{platform}-\#{unique_id}\")
    add_definitions(-DFACTORY_AP_PROVISION_MODE=AP_MODE_DISCONNECTED)
    add_definitions(-DFACTORY_AP_SSID=\"WC-\#{unique_id}\")
    add_definitions(-DFACTORY_AP_PASSWORD=\"123456789\")
    add_definitions(-DFACTORY_AP_CHANNEL=1)
    add_definitions(-DFACTORY_AP_SSID_HIDDEN=false)
    add_definitions(-DFACTORY_AP_MAX_CLIENTS=4)
    add_definitions(-DFACTORY_AP_LOCAL_IP=\"192.168.1.111\")
    add_definitions(-DFACTORY_AP_GATEWAY_IP=\"192.168.1.111\")
    add_definitions(-DFACTORY_AP_SUBNET_MASK=\"255.255.255.0\")
    add_definitions(-DFACTORY_ADMIN_USERNAME=\"admin\")
    add_definitions(-DFACTORY_ADMIN_PASSWORD=\"admin\")
    add_definitions(-DFACTORY_GUEST_USERNAME=\"guest\")
    add_definitions(-DFACTORY_GUEST_PASSWORD=\"guest\")
    add_definitions(-DFACTORY_NTP_ENABLED=true)
    add_definitions(-DFACTORY_NTP_TIME_ZONE_LABEL=\"Europe/London\")
    add_definitions(-DFACTORY_NTP_TIME_ZONE_FORMAT=\"GMT0BST,M3.5.0/1,M10.5.0\")
    add_definitions(-DFACTORY_NTP_SERVER=\"time.google.com\")
    add_definitions(-DFACTORY_OTA_PORT=8266)
    add_definitions(-DFACTORY_OTA_PASSWORD=\"esp-react\")
    add_definitions(-DFACTORY_OTA_ENABLED=true)
    add_definitions(-DFACTORY_MQTT_ENABLED=false)
    add_definitions(-DFACTORY_MQTT_HOST=\"test.mosquitto.org\")
    add_definitions(-DFACTORY_MQTT_PORT=1883)
    add_definitions(-DFACTORY_MQTT_USERNAME=\"\")
    add_definitions(-DFACTORY_MQTT_PASSWORD=\"\")
    add_definitions(-DFACTORY_MQTT_CLIENT_ID=\"\#{platform}-\#{unique_id}\")
    add_definitions(-DFACTORY_MQTT_KEEP_ALIVE=60)
    add_definitions(-DFACTORY_MQTT_CLEAN_SESSION=true)
    add_definitions(-DFACTORY_MQTT_MAX_TOPIC_LENGTH=128)
    add_definitions(-DFACTORY_JWT_SECRET=\"\#{random}-\#{random}\")
    add_definitions(-DFT_PROJECT=1)
    add_definitions(-DFT_SECURITY=1)
    add_definitions(-DFT_MQTT=1)
    add_definitions(-DFT_NTP=1)
    add_definitions(-DFT_OTA=1)
    add_definitions(-DFT_UPLOAD_FIRMWARE=1)
    add_definitions(-DNO_GLOBAL_ARDUINOOTA)
    add_definitions(-DPROGMEM_WWW)
    add_definitions(-DF_CPU=160000000L)
    add_definitions(-D__ets__)
    add_definitions(-DICACHE_FLASH)
    add_definitions(-DARDUINO=10805)
    add_definitions(-DARDUINO_BOARD=\"PLATFORMIO_ESP12E\")
    add_definitions(-DFLASHMODE_DIO)
    add_definitions(-DLWIP_OPEN_SRC)
    add_definitions(-DNONOSDK22x_190703=1)
    add_definitions(-DTCP_MSS=536)
    add_definitions(-DLWIP_FEATURES=1)
    add_definitions(-DLWIP_IPV6=0)
    add_definitions(-DVTABLES_IN_FLASH)
    add_definitions(-DMMU_IRAM_SIZE=0x8000)
    add_definitions(-DMMU_ICACHE_SIZE=0x8000)

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/framework")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ArduinoOTA")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266mDNS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/LittleFS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/DNSServer/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp12e/AsyncMqttClient/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp12e/ESP Async WebServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WiFi/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Hash/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp12e/ESPAsyncTCP/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp12e/ArduinoJson/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/tools/sdk/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/cores/esp8266")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/tools/sdk/lwip2/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/variants/nodemcu")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/EEPROM")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266AVRISP/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266HTTPClient/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266HTTPUpdateServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266LLMNR")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266NetBIOS")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266SSDP")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266SdFat/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WebServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WiFiMesh/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266httpUpdate/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Ethernet/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/GDBStub/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/I2S/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Netdump/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SD/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SDFS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SPI")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SPISlave/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Servo/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SoftwareSerial/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/TFT_Touch_Shield_V2")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Ticker/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Wire")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/esp8266/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/lwIP_PPP/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/lwIP_enc28j60/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/lwIP_w5100/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/lwIP_w5500/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/xtensa-lx106-elf")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/lib/gcc/xtensa-lx106-elf/10.3.0/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/lib/gcc/xtensa-lx106-elf/10.3.0/include-fixed")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp12e/*.*
    )
endif()

FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
    ${CMAKE_CURRENT_LIST_DIR}/test/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
